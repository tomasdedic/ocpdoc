name: generate_hugo_site

on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-18.04
    steps:
      - name: Prepare
        id: prep
        run: |
          DOCKER_IMAGE=ghcr.io/tomasdedic/ocpdoc/hugogen
          VERSION=noop
          if [[ $GITHUB_REF == refs/tags/* ]]; then
            VERSION=${GITHUB_REF#refs/tags/}
          elif [[ $GITHUB_REF == refs/heads/* ]]; then
            VERSION=$(echo ${GITHUB_REF#refs/heads/} | sed -r 's#/+#-#g')
            if [ "${{ github.event.repository.default_branch }}" = "$VERSION" ]; then
              VERSION=edge
            fi
          elif [[ $GITHUB_REF == refs/pull/* ]]; then
            VERSION=pr-${{ github.event.number }}
          fi
          TAGS="${DOCKER_IMAGE}:${VERSION}"
          if [[ $VERSION =~ ^v[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}$ ]]; then
            MINOR=${VERSION%.*}
            MAJOR=${MINOR%.*}
            TAGS="$TAGS,${DOCKER_IMAGE}:${MINOR},${DOCKER_IMAGE}:${MAJOR},${DOCKER_IMAGE}:latest"
          elif [ "${{ github.event_name }}" = "push" ]; then
            # TAGS="$TAGS,${DOCKER_IMAGE}:sha-${GITHUB_SHA::8}"
            TAGS="${DOCKER_IMAGE}:sha-${GITHUB_SHA::8}"
          fi
          echo ::set-output name=version::${VERSION}
          echo ::set-output name=tags::${TAGS}
          echo ::set-output name=created::$(date -u +'%Y-%m-%dT%H:%M:%SZ')
          echo $VERSION
          echo $TAGS

      - name: Checkout repo
        uses: actions/checkout@v2
        with:
          ssh-key: ${{ secrets.ACTIONS_DEPLOY_KEY }}
          submodules: true
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          # registry: docker.pkg.github.com
          username: dedtom@gmail.com
          password: ${{ secrets.PERSONAL_TOKEN }}

      - id: get-id
        run: |
          id=$(echo ${GITHUB_SHA} | cut -c 1-4)
          echo ${GITHUB_SHA}
          echo $id
          echo "::set-output name=sha::$id"

      - name: Build and publish image to Github
        id: build_and_publish
        uses: docker/build-push-action@v2
        with:
          push: true
          context: .
          file: ./Dockerfile
          tags: ${{steps.prep.outputs.tags}}
          # tags: docker.pkg.github.com/tomasdedic/ocpdoc/hugogen:${{steps.get-id.outputs.sha}}
          # secrets: |
            # GIT_AUTH_TOKEN=${{ secrets.PERSONAL_TOKEN }}
          labels: |
            org.opencontainers.image.created=${{ steps.prep.outputs.created }}
            org.opencontainers.image.source=${{ github.repositoryUrl }}
            org.opencontainers.image.version=${{ steps.prep.outputs.version }}
            org.opencontainers.image.revision=${{ github.sha }}
            org.opencontainers.image.licenses=${{ github.event.repository.license.name }}

      - name: Inform other repo that build is success
        if: ${{ steps.build_and_publish.conclusion == 'success' }}
        uses: actions/checkout@v2
        with:
          repository: tomasdedic/ocpdocCD
          token: ${{ secrets.PERSONAL_TOKEN }} # `GitHub_PAT` is a secret that contains your PAT
          path: argo_repo

      # - name: Delete oldest package
      #   if: ${{ steps.build_and_publish.conclusion == 'success'}}
      #   uses: actions/delete-package-versions@v1
      #   with:
      #     package-name: hugogen
      - name: save image tag
        run: |
          echo "image: ${{steps.prep.outputs.tags}}" >image_tags.yaml

      - name: Generate Deployment file
        uses: tomasdedic/action-yq@1.2
        with:
          file: argo_repo/deploy/yq_inline.sh

      - name: git commit to outer repo
        run: |
          cd argo_repo
          git config user.name github-actions
          git config user.email github-actions@github.com
          git add .
          git commit -m "generated"
          git push

