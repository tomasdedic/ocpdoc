name: generate_hugo_site

on:
  push:
    branches:
      - master

jobs:
  build:
    env:
      image_name: hugo
    runs-on: ubuntu-18.04
    steps:
      - name: Checkout repo
        uses: actions/checkout@v2
        with:
          ssh-key: ${{ secrets.ACTIONS_DEPLOY_KEY }}
          submodules: true
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: dedtom@gmail.com
          password: ${{ secrets.PERSONAL_TOKEN }}

      - id: get-id
        run: |
          id=$(echo ${GITHUB_SHA} | cut -c 1-4)
          echo ${GITHUB_SHA}
          echo $id
          echo "::set-output name=sha::$id"

      - name: Build and publish image to Github
        id: build_and_publish
        uses: docker/build-push-action@v2
        with:
          push: true
          context: .
          file: ./Dockerfile
          tags: ghcr.io/tomasdedic/ocpdoc/hugogen:${{steps.get-id.outputs.sha}}
          secrets: |
            GIT_AUTH_TOKEN=${{ secrets.GITHUB_TOKEN }}

      - name: Fetch releases
        run: |
          curl -X POST \
            -s \
            -H "Accept: application/vnd.github.package-deletes-preview+json" \
            -H "Authorization: bearer ${{ secrets.GITHUB_TOKEN }}" \
            -d '{"query":"query {repository(\"${{ GITHUB_REPOSITORY }}\") {registryPackages(last:1) {edges{node{id, name, versions(last:100){edges {node {id, updatedAt, version}}}}}}}}"}' \
            -o /tmp/response.json \
            --url https://api.github.com/graphql

      - name: Filter Releases
        run: "cat /tmp/response.json | jq -r 'def daysAgo(days): (now | floor) - (days * 86400); [.data.repository.registryPackages.edges[0].node.versions.edges | sort_by(.node.updatedAt|fromdate) | reverse | .[] | select( .node.version != \"docker-base-layer\" ) | .value[].node.id] | unique_by(.) | @csv'  | cut -d, -f1  | sed -e 's/^\"//' -e 's/\"$//' > /tmp/release.json"

      - name: Show Release
        id: release
        run: printf "::set-output name=id::%s" $(cat /tmp/release.json)
      # - name: Delete oldest package
      #   if: ${{ steps.build_and_publish.conclusion == 'success'}}
      #   uses: actions/delete-package-versions@v1
      #   with:
      #     package-name: hugogen
