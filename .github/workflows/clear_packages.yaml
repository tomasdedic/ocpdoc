name: clear_packages
on:
  push:
    branches:
      - master
jobs:
  clear_packages:
    runs-on: ubuntu-18.04
    steps:
      - name: get env
        id: get_env
        run: |
          user=$(echo ${GITHUB_REPOSITORY} | cut -d/ -f1)
          repository=$(echo ${GITHUB_REPOSITORY} | cut -d/ -f2)
          echo $user
          echo $repository
          echo "::set-output name=user::$user"
          echo "::set-output name=pass::$repository"
      - name: Fetch releases
        run: |
          curl -X POST \
            -s \
            -H "Accept: application/vnd.github.package-deletes-preview+json" \
            -H "Authorization: bearer ${{ secrets.GITHUB_TOKEN }}" \
            -d '{"query":"query {repository(owner:\"${{ steps.get_env.outputs.user }}\", name:\"${{ steps.get_env.outputs.repository }}\") {registryPackages(last:1) {edges{node{id, name, versions(last:100){edges {node {id, updatedAt, version}}}}}}}}"}' \
            -o /tmp/response.json \
            --url https://api.github.com/graphql
      - name: Filter Releases
        run: "cat /tmp/response.json | jq -r 'def daysAgo(days): (now | floor) - (days * 86400); [.data.repository.registryPackages.edges[0].node.versions.edges | sort_by(.node.updatedAt|fromdate) | reverse | .[] | select( .node.version != \"docker-base-layer\" ) | .value[].node.id] | unique_by(.) | @csv'  | cut -d, -f1  | sed -e 's/^\"//' -e 's/\"$//' > /tmp/release.json"
      - name: Show Release
        id: release
        run: printf "::set-output name=id::%s" $(cat /tmp/release.json)
